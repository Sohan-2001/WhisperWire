
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Users can only read/write their own user document.
    // Other authenticated users can see basic info (displayName, photoURL) for DMs.
    match /users/{userId} {
      allow create: if request.auth != null && request.auth.uid == userId;
      allow read: if request.auth != null;
      allow update: if request.auth != null && request.auth.uid == userId;
      allow delete: if false;
    }

    // Rules for chat documents
    match /chats/{chatId} {
      // A user can read a chat document if they are a member of it.
      allow read: if request.auth != null && request.auth.uid in resource.data.users;

      // A user can create a chat if they are a member of the new chat.
      allow create: if request.auth != null && request.auth.uid in request.resource.data.users;

      // No one can update or delete a chat document directly for now.
      allow update, delete: if false;

      // Rules for messages within a chat
      match /messages/{messageId} {
        // A user can read messages if they are part of the chat.
        allow read: if request.auth != null && request.auth.uid in get(/databases/$(database)/documents/chats/$(chatId)).data.users;

        // A user can create a message if:
        // 1. They are authenticated.
        // 2. They are a member of the chat.
        // 3. The message 'uid' matches their own auth uid.
        // 4. The message text is a string and not empty.
        // 5. The 'createdAt' field is a server timestamp.
        allow create: if request.auth != null
                      && request.auth.uid in get(/databases/$(database)/documents/chats/$(chatId)).data.users
                      && request.resource.data.uid == request.auth.uid
                      && request.resource.data.text is string
                      && request.resource.data.text.size() > 0
                      && request.resource.data.createdAt == request.time;

        // A user can only update their own message's 'text' field.
        allow update: if request.auth != null
                      && resource.data.uid == request.auth.uid
                      && request.resource.data.text is string
                      && request.resource.data.keys().hasOnly(['text']);


        // A user can only delete their own message.
        allow delete: if request.auth != null && resource.data.uid == request.auth.uid;
      }
    }
  }
}
